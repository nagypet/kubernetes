#-----------------------------------------------------------------------------------------------------------------------
# Service
#-----------------------------------------------------------------------------------------------------------------------
apiVersion: v1
kind: Service
metadata:
  labels:
    app: grafana
  name: grafana
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 3000
    targetPort: http
  selector:
    app: grafana
---
#-----------------------------------------------------------------------------------------------------------------------
# Deployment
#-----------------------------------------------------------------------------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - image: grafana/grafana
        name: grafana
        ports:
        - containerPort: 3000
          name: http
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
        # resources:
        #   limits:
        #     cpu: 200m
        #     memory: 200Mi
        #   requests:
        #     cpu: 100m
        #     memory: 100Mi
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-storage
          readOnly: false
        - mountPath: /etc/grafana/provisioning/datasources
          name: grafana-datasources
          readOnly: false
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: grafana-{{ .Release.Namespace }}
      volumes:
      - emptyDir: {}
        name: grafana-storage
      - configMap: 
          name: grafana-datasources
        name: grafana-datasources
---
#-----------------------------------------------------------------------------------------------------------------------
# Ingress
#-----------------------------------------------------------------------------------------------------------------------
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: {{ .Release.Namespace }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: grafana.{{ .Release.Namespace }}.k8s-test.perit.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              name: http
